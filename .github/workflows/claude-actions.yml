name: Claude Code Actions

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]

jobs:
  claude:
    # Only run if the comment contains @claude and is not from a bot
    if: |
      !endsWith(github.event.sender.login, '[bot]') && (
        (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'issues' && contains(github.event.issue.body, '@claude'))
      )
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better context

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.21

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Add helpful comment
        uses: actions/github-script@v7
        with:
          script: |
            const body = `## 👋 Claude Assistance Requested
            
            A Claude code assistance request has been detected in this ${context.eventName === 'issues' ? 'issue' : 'comment'}.
            
            ### Project Guidelines:
            - 🚀 Always use **Bun** (not npm/yarn/pnpm)
            - 📁 Follow **kebab-case** for files/directories  
            - 💎 Use **TypeScript with strict mode**
            - 📦 Keep files in appropriate **packages** (not root)
            - 🔗 Use **absolute imports** for workspace packages
            
            ### Available Commands:
            - \`bun dev\` - Start development
            - \`bun build\` - Build all packages
            - \`bun typecheck\` - Check types
            - \`bun lint\` - Run linter
            - \`bun test\` - Run tests  
            - \`bun format\` - Format code
            
            > **Note:** This is an automated response. For actual Claude assistance, please use a supported Claude integration.`;
            
            if (context.eventName === 'issues') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            } else {
              // For PR or issue comments, we can add a reaction
              const commentId = context.payload.comment?.id;
              if (commentId) {
                await github.rest.reactions.createForIssueComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: commentId,
                  content: 'eyes'
                });
              }
            }
