{
  "packages/prompt-enhancer/package.json": {
    "name": "@repo/prompt-enhancer",
    "version": "1.0.0",
    "type": "module",
    "main": "./dist/index.js",
    "types": "./dist/index.d.ts",
    "exports": {
      ".": {
        "types": "./dist/index.d.ts",
        "import": "./dist/index.js"
      },
      "./types": {
        "types": "./dist/types.d.ts",
        "import": "./dist/types.js"
      }
    },
    "files": [
      "dist",
      "README.md"
    ],
    "scripts": {
      "build": "tsc",
      "dev": "tsc --watch",
      "test": "bun test",
      "test:e2e": "bun test tests/e2e",
      "test:watch": "bun test --watch",
      "clean": "rm -rf dist .turbo",
      "typecheck": "tsc --noEmit",
      "lint": "eslint src --ext .ts"
    },
    "dependencies": {
      "@ai-sdk/anthropic": "workspace:*",
      "ai": "^3.0.0",
      "chalk": "^5.3.0",
      "compute-cosine-similarity": "^1.1.0",
      "uuid": "^9.0.0",
      "yaml": "^2.3.4",
      "zod": "^3.22.4"
    },
    "devDependencies": {
      "@repo/config-eslint": "workspace:*",
      "@repo/config-typescript": "workspace:*",
      "@types/bun": "latest",
      "@types/node": "^20.0.0",
      "@types/uuid": "^9.0.0",
      "typescript": "^5.9.2"
    },
    "peerDependencies": {
      "bun-types": "latest"
    }
  },
  "packages/prompt-enhancer/tsconfig.json": {
    "extends": "@repo/config-typescript/base.json",
    "compilerOptions": {
      "outDir": "./dist",
      "rootDir": "./src",
      "declaration": true,
      "declarationMap": true,
      "sourceMap": true,
      "lib": ["ES2022"],
      "target": "ES2022",
      "module": "ESNext",
      "moduleResolution": "bundler",
      "strict": true,
      "esModuleInterop": true,
      "skipLibCheck": true,
      "forceConsistentCasingInFileNames": true,
      "resolveJsonModule": true,
      "isolatedModules": true,
      "types": ["bun-types", "node"]
    },
    "include": ["src/**/*"],
    "exclude": ["node_modules", "dist", "tests"]
  },
  "packages/prompt-enhancer/.gitignore": [
    "# Dependencies",
    "node_modules/",
    "",
    "# Build output",
    "dist/",
    ".turbo/",
    "",
    "# Test coverage",
    "coverage/",
    "",
    "# Temporary files",
    "*.tmp",
    "*.log",
    "",
    "# IDE",
    ".vscode/",
    ".idea/",
    "",
    "# OS",
    ".DS_Store",
    "Thumbs.db",
    "",
    "# Prompt storage",
    ".prompts/"
  ],
  "packages/prompt-enhancer/README.md": [
    "# @repo/prompt-enhancer",
    "",
    "A comprehensive SDK for transforming raw text into validated, context-aware structured prompts for AI workflows.",
    "",
    "## Features",
    "",
    "- üéØ **Intelligent Parsing** - Automatically detects workflow type and extracts requirements",
    "- üîç **Context Awareness** - Analyzes codebase for relevant files and dependencies",
    "- üìù **Structured Output** - Consistent format with clear instructions and expectations",
    "- ‚úÖ **Validation System** - Quality scoring with actionable improvement suggestions",
    "- üíæ **Storage & Retrieval** - Persistent prompt library with search capabilities",
    "- üîÑ **Multiple Export Formats** - Markdown, JSON, and YAML",
    "",
    "## Installation",
    "",
    "```bash",
    "bun add @repo/prompt-enhancer",
    "```",
    "",
    "## Quick Start",
    "",
    "### Programmatic Usage",
    "",
    "```typescript",
    "import { PromptEnhancerSDK } from '@repo/prompt-enhancer';",
    "",
    "const enhancer = new PromptEnhancerSDK({",
    "  projectPath: process.cwd(),",
    "  enableCodebaseContext: true",
    "});",
    "",
    "// Simple enhancement",
    "const enhanced = await enhancer.enhance(",
    "  'Add rate limiting to authentication endpoints'",
    ");",
    "",
    "console.log(`Score: ${enhanced.validation.score}/100`);",
    "console.log(`Workflow: ${enhanced.workflow}`);",
    "```",
    "",
    "### CLI Usage",
    "",
    "```bash",
    "# Enhance from text",
    "bun enhance-prompt \"Fix login bug\"",
    "",
    "# Enhance from file with type",
    "bun enhance-prompt -f prompt.txt -t feature -o enhanced.md",
    "",
    "# Interactive mode",
    "bun enhance-prompt -i -t bug",
    "",
    "# Validate existing prompt",
    "bun enhance-prompt -f prompt.json --validate",
    "```",
    "",
    "## Workflow Types",
    "",
    "- `feature` - New functionality",
    "- `bug` - Bug fixes",
    "- `refactor` - Code improvements",
    "- `documentation` - Documentation updates",
    "- `research` - Analysis and exploration",
    "- `pr_review` - Pull request reviews",
    "- `general` - General tasks",
    "",
    "## API Reference",
    "",
    "### Main Class",
    "",
    "```typescript",
    "class PromptEnhancerSDK {",
    "  enhance(raw: string | RawPromptInput): Promise<StructuredPrompt>",
    "  validate(prompt: StructuredPrompt): ValidationResult",
    "  store(prompt: StructuredPrompt): Promise<string>",
    "  retrieve(id: string): Promise<StructuredPrompt>",
    "  update(id: string, updates: Partial<StructuredPrompt>): Promise<StructuredPrompt>",
    "  search(query: PromptSearchQuery): Promise<StructuredPrompt[]>",
    "  export(prompt: StructuredPrompt, format: 'json' | 'yaml' | 'markdown'): string",
    "}",
    "```",
    "",
    "## Configuration",
    "",
    "```typescript",
    "interface PromptEnhancerConfig {",
    "  projectPath: string;              // Root path of the project",
    "  outputDir?: string;               // Where to store prompts (default: .prompts/)",
    "  enableCodebaseContext?: boolean;  // Include code analysis (default: true)",
    "  maxContextTokens?: number;        // Token limit for context (default: 4000)",
    "  templateLibrary?: PromptTemplate[]; // Custom templates",
    "  debug?: boolean;                  // Enable debug logging",
    "  logLevel?: LogLevel;             // Logging level",
    "}",
    "```",
    "",
    "## Testing",
    "",
    "```bash",
    "# Run all tests",
    "bun test",
    "",
    "# Run E2E tests",
    "bun test:e2e",
    "",
    "# Watch mode",
    "bun test:watch",
    "```",
    "",
    "## Development",
    "",
    "```bash",
    "# Build the package",
    "bun run build",
    "",
    "# Development mode with watch",
    "bun run dev",
    "",
    "# Type checking",
    "bun run typecheck",
    "",
    "# Linting",
    "bun run lint",
    "```",
    "",
    "## License",
    "",
    "MIT"
  ],
  "scripts/setup-prompt-enhancer.sh": [
    "#!/bin/bash",
    "",
    "# Setup script for Prompt Enhancer SDK",
    "set -e",
    "",
    "echo \"üöÄ Setting up Prompt Enhancer SDK...\"",
    "",
    "# Create package directory",
    "mkdir -p packages/prompt-enhancer/{src,tests/e2e}",
    "",
    "# Create .prompts directory for storage",
    "mkdir -p .prompts",
    "",
    "# Make CLI script executable",
    "chmod +x scripts/enhance-prompt.ts",
    "",
    "# Add to root package.json scripts",
    "echo \"Adding scripts to package.json...\"",
    "cat <<EOF > /tmp/package-scripts.json",
    "{",
    "  \"enhance\": \"bun run scripts/enhance-prompt.ts\",",
    "  \"enhance:help\": \"bun run scripts/enhance-prompt.ts --help\"",
    "}",
    "EOF",
    "",
    "# Install dependencies",
    "cd packages/prompt-enhancer",
    "bun install",
    "",
    "# Build the package",
    "bun run build",
    "",
    "echo \"‚úÖ Prompt Enhancer SDK setup complete!\"",
    "echo \"\"",
    "echo \"Usage:\"",
    "echo \"  bun enhance --help           # Show help\"",
    "echo \"  bun enhance 'your prompt'    # Enhance a prompt\"",
    "echo \"\"",
    "echo \"Example:\"",
    "echo \"  bun enhance 'Add caching to our API endpoints' -t feature -o enhanced.md\"",
    ""
  ]
}